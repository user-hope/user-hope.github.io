import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as s,e as a}from"./app-9b0cd270.js";const e={},p=a(`<h2 id="xpath" tabindex="-1"><a class="header-anchor" href="#xpath" aria-hidden="true">#</a> Xpath</h2><p><code>XPath</code> 的选择功能十分强大, 它提供了非常简洁明了的路径选择表达式, 另外它还提供了超过 100 个内建函数用于字符串、数值、时间的匹配以及节点、序列的处理等等, 几乎所有我们想要定位的节点都可以用 <code>XPath</code> 来选择;</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><p>XPath 使用路径表达式来选取 XML 文档中的节点或节点集. 节点是通过沿着路径 (path) 或者步 (steps) 来选取的; 在 odoo 中, xpath 是一个特殊的标签, 接收以下两个参数:</p><ul><li><strong><code>expr</code></strong>: 完整的 xpath 表达式</li><li><strong><code>position</code></strong>: 对节点的操作方式, 可选: <ul><li><strong><code>inside</code></strong>: 在 expr 匹配的元素内部进行创建(默认添加到最后一个元素);</li><li><strong><code>replace</code></strong>: 替换 expr 匹配到的内容;</li><li><strong><code>before</code></strong>: 在 expr 匹配的元素前面添加;</li><li><strong><code>after</code></strong>: 在 expr 匹配的元素后添加内容;</li><li><strong><code>attributes</code></strong>: 使用 attribute 标签对 expr 匹配的元素属性进行修改;</li></ul></li></ul><h2 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式" aria-hidden="true">#</a> 表达式</h2><p>下面是 expr 常用的路径表达式:</p><table><thead><tr><th>表达式</th><th>描述</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td>nodeName</td><td>选取此节点的所有子节点</td><td style="text-align:left;"><code>div</code></td></tr><tr><td>/</td><td>从根节点选取(取子节点)</td><td style="text-align:left;"><code>/div</code></td></tr><tr><td>//</td><td>从匹配选择的当前节点选择文档中的节点, 不考虑它们的位置(取子孙节点)</td><td style="text-align:left;"><code>//div</code></td></tr><tr><td>.</td><td>选取当前节点</td><td style="text-align:left;"><code>. </code></td></tr><tr><td>..</td><td>选取当前节点的父节点</td><td style="text-align:left;"><code>.. </code></td></tr><tr><td>@</td><td>选取属性</td><td style="text-align:left;"><code>div[@class=&#39;app&#39;]</code></td></tr></tbody></table><h2 id="谓语" tabindex="-1"><a class="header-anchor" href="#谓语" aria-hidden="true">#</a> 谓语</h2><p>谓语用来查找某个特定的节点或者包含某个指定的值的节点, 谓语被嵌在方括号中;</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td><code>/html/head/meta[2]</code></td><td>选取 html 下的子元素的 head 下的子元素的第一个 meta 元素</td></tr><tr><td><code>/html//div[2]</code></td><td>选取 html 下的子元素的第二个 div 元素</td></tr><tr><td><code>/html/head/meta[last()]</code></td><td>选取 html 下的子元素的 head 下的子元素的最后一个 meta 元素</td></tr><tr><td><code>/html/head/meta[last() - 1]</code></td><td>选取 html 下的子元素的 head 下的子元素的倒数第二个 meta 元素</td></tr><tr><td><code>/html/head/meta[position() &lt; 3]</code></td><td>选取 html 下的子元素的 head 下的子元素的最前面的两个 meta 元素</td></tr><tr><td><code>//title[@lang]</code></td><td>选取所有拥有名为 lang 的属性的 title 元素</td></tr><tr><td><code>//title[@lang=&#39;eng&#39;]</code></td><td>选取所有 title 元素, 且这些元素拥有值为 eng 的 lang 属性</td></tr><tr><td><code>//div[hasclass(&#39;settings&#39;)]</code></td><td>选取所有的拥有 class=&quot;settings&quot; 的 div 元素</td></tr><tr><td><code>//div[contains(@t-attf-class, &#39;oe_kanban_card&#39;)]</code></td><td>模糊选取 div 上拥有 t-attf-class 包含 &#39;oe_kanban_card&#39; 字符的元素</td></tr></tbody></table><h2 id="选取未知节点" tabindex="-1"><a class="header-anchor" href="#选取未知节点" aria-hidden="true">#</a> 选取未知节点</h2><p>XPath 通配符可用来选取未知的 XML 元素</p><table><thead><tr><th>通配符</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>*</td><td>匹配任何元素节点</td><td><code>//div/*</code></td></tr><tr><td>@*</td><td>匹配任何属性节点</td><td><code>//title[@*]</code></td></tr><tr><td>node()</td><td>匹配任何类型的节点</td><td><code>//html/node()</code></td></tr></tbody></table><h2 id="逻辑表达式" tabindex="-1"><a class="header-anchor" href="#逻辑表达式" aria-hidden="true">#</a> 逻辑表达式</h2><p>当一个元素无法定位到唯一值的时候, 我们可以使用逻辑表达式来进行定位</p><table><thead><tr><th>运算符</th><th>描述</th><th>示例</th><th>返回值</th></tr></thead><tbody><tr><td>|</td><td>选取多个节点集合</td><td><code>//svg | //span</code></td><td>找到所有的 svg 和 span 元素</td></tr><tr><td>and</td><td>根据条件选取元素</td><td><code>//span[@class=&#39;n-ellipsis&#39; and @style]</code></td><td>找到所有的 class 为 n-ellipsis 并且拥有 style 属性的 span 元素</td></tr><tr><td>or</td><td>or 和 and 很像, 满足任一条件即匹配成功</td><td><code>//span[@class=&#39;n-ellipsis&#39; or @style]</code></td><td>找到所有的 class 为 n-ellipsis 或者是拥有 style 属性的 span 元素</td></tr><tr><td>=</td><td>根据值查找</td><td><code>//input[@type=&#39;textarea&#39;]</code></td><td>找到所有 input type=&quot;textarea&quot; 的元素</td></tr><tr><td>!=</td><td>同 = 取反</td><td><code>//input[@type!=&#39;textarea&#39;]</code></td><td>找到所有 input type!=&quot;textarea&quot; 的元素</td></tr><tr><td>&lt;</td><td>查找元素的值小于某个范围(值)</td><td><code>//table//td//span[text() &gt; &#39;3617&#39;]</code></td><td>找到 table 下的 td 下的 span 元素的文本 &gt; &#39;3617&#39; 的元素</td></tr><tr><td>&gt;</td><td>查找元素的值大于某个范围(值)</td><td><code>//table//td//span[text() &lt; &#39;3617&#39;]</code></td><td>找到 table 下的 td 下的 span 元素的文本 &lt; &#39;3617&#39; 的元素</td></tr><tr><td>&lt;=</td><td>查找元素的值小于或等于某个范围(值)</td><td><code>//table//td//span[text() &lt;= &#39;3617&#39;]</code></td><td>找到 table 下的 td 下的 span 元素的文本 &lt;= &#39;3617&#39; 的元素</td></tr><tr><td>&gt;=</td><td>查找元素的值大于或等于某个范围(值)</td><td><code>//table//td//span[text() &gt;= &#39;3617&#39;]</code></td><td>找到 table 下的 td 下的 span 元素的文本 &gt;= &#39;3617&#39; 的元素</td></tr><tr><td>not</td><td>找到不满足not条件的</td><td><code>//div[not(@id=&#39;app&#39;)]</code></td><td>找到 div id 不为 app 的元素</td></tr></tbody></table><h2 id="轴方式定位" tabindex="-1"><a class="header-anchor" href="#轴方式定位" aria-hidden="true">#</a> 轴方式定位</h2><p>轴可定义相对于当前节点的节点集查找;</p><table><thead><tr><th>标识</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>ancestor</td><td>选取当前节点的所有先辈 (父、祖父等)</td><td><code>//div[@id=&quot;app&quot;]/ancestor::*</code></td></tr><tr><td>ancestor-or-self</td><td>选取当前节点的所有先辈 (父、祖父等) 以及当前节点本身</td><td><code>//div[@id=&quot;app&quot;]/ancestor-or-self::*</code></td></tr><tr><td>attribute</td><td>选取当前节点的所有属性</td><td><code>//div[@id=&quot;app&quot;]/attribute::*</code></td></tr><tr><td>child</td><td>选取当前节点的所有子元素(不包含孙节点)</td><td><code>//div[@id=&quot;app&quot;]/child::* </code></td></tr><tr><td>descendant</td><td>选取当前节点的所有子元素(包含子, 孙节点)</td><td><code>//div[@id=&quot;app&quot;]/descendant::*</code></td></tr><tr><td>descendant-or-self</td><td>选取当前节点的所有子元素(包含子, 孙节点) 以及当前节点本身</td><td><code>//div[@id=&quot;app&quot;]/descendant-or-self::*</code></td></tr><tr><td>following</td><td>选取文档中当前节点的结束标签之后的所有节点</td><td><code>//div[@id=&quot;app&quot;]/following::*</code></td></tr><tr><td>following-sibling</td><td>选取当前节点之后的所有兄弟节点</td><td><code>//div[@id=&quot;app&quot;]/following-sibling::*</code></td></tr><tr><td>namespace</td><td>选取当前节点的所有命名空间节点</td><td><code>//div[@id=&quot;app&quot;]/namespace::*</code></td></tr><tr><td>parent</td><td>选取当前节点的父节点</td><td><code>//div[@id=&quot;app&quot;]/parent::*</code></td></tr><tr><td>preceding</td><td>选取文档中当前节点的开始标签之前的所有节点</td><td><code>//div[@id=&quot;app&quot;]/preceding::*</code></td></tr><tr><td>preceding-sibling</td><td>选取当前节点之前的所有同级节点</td><td><code>//div[@id=&quot;app&quot;]/preceding-sibling::*</code></td></tr><tr><td>self</td><td>选取当前节点</td><td><code>//div[@id=&quot;app&quot;]/self::*</code></td></tr></tbody></table><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span>
    color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    defaultColor<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Highlight</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> options<span class="token operator">:</span> Options <span class="token operator">=</span> <span class="token punctuation">{</span>
      color<span class="token operator">:</span> <span class="token string">&#39;#2d8cf0&#39;</span><span class="token punctuation">,</span>
      defaultColor<span class="token operator">:</span> <span class="token string">&#39;#333639&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> el<span class="token operator">:</span> HTMLElement<span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>el<span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span> opts<span class="token operator">:</span> Options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>el <span class="token operator">=</span> el<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">initStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> styleEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> cssRule <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
            .highlight-el {
                background-color: #afd9db !important;
                border-radius: 10px !important; 
            }
        </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        styleEl<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>cssRule<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>styleEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">contains</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**
         * 忽略大小写
         */</span>
        <span class="token keyword">const</span> Xpath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">descendant::text()[contains(translate(., &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;, &#39;abcdefghijklmnopqrstuvwxyz&#39;), &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>str<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;)]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> evaluator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XPathEvaluator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> evaluator<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span>Xpath<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>el<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> XPathResult<span class="token punctuation">.</span><span class="token constant">ORDERED_NODE_SNAPSHOT_TYPE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> result<span class="token punctuation">.</span>snapshotLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> node<span class="token operator">:</span> HTMLElement <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">snapshotItem</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span>
            node<span class="token punctuation">.</span>parentElement<span class="token operator">?.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;highlight-el&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> Xpath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">descendant-or-self::*[contains(@class, &#39;highlight-el&#39;)]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> evaluator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XPathEvaluator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> evaluator<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span>Xpath<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>el<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> XPathResult<span class="token punctuation">.</span><span class="token constant">ORDERED_NODE_SNAPSHOT_TYPE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> result<span class="token punctuation">.</span>snapshotLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> node <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">snapshotItem</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span>
            node<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;highlight-el&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[p];function d(c,l){return t(),s("div",null,o)}const r=n(e,[["render",d],["__file","Xpath.html.vue"]]);export{r as default};
