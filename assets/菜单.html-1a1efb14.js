import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as u,a as n,b as a,d as t,w as e,e as p}from"./app-9b0cd270.js";const i="/images/odoo/S15/menu.png",r={},d=n("h2",{id:"菜单",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#菜单","aria-hidden":"true"},"#"),a(" 菜单")],-1),k=p(`<h2 id="菜单的本质" tabindex="-1"><a class="header-anchor" href="#菜单的本质" aria-hidden="true">#</a> 菜单的本质</h2><p>前面有提到过, 菜单实际上也是一种数据文件, 属于 <code>ir.ui.menu</code> 模型, <code>&lt;menuitem /&gt;</code> 实际上是一个语法糖; 菜单的对象所拥有的常见属性有以下几个:</p><ul><li><strong><code>name</code></strong>: 菜单名称;</li><li><strong><code>complete_name</code></strong>: 完整的名称路径, 这个是由系统自动计算出来的;</li><li><strong><code>parent_id</code></strong>: 上级菜单的 id;</li><li><strong><code>action</code></strong>: 绑定的动作;</li><li><strong><code>web_icon</code></strong>: 菜单的图标;</li><li><strong><code>sequence</code></strong>: 优先级(值越小越靠前);</li><li><strong><code>web_icon_data</code></strong>: 上传的图标文件;</li><li><strong><code>child_id</code></strong>: 子菜单的 id 集合;</li><li><strong><code>group_ids</code></strong>: 权限组;</li></ul><p>我们在 xml 文件中常用的写法是:</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuitem</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mass_mailing_sms_menu_mass_sms<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SMS Marketing<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mailing_mailing_action_sms<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mass_mailing_sms_menu_root<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">sequence</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">groups</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mass_mailing.group_mass_mailing_user<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际上它就是 <code>&lt;record&gt;</code> 的简写, 完整的菜单可以写成如下的模式:</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>record</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mass_mailing_sms_menu_mass_sms<span class="token punctuation">&quot;</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ir.ui.menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>SMS Marketing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sequence<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>action<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mailing_mailing_action_sms<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mass_mailing_sms_menu_root<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groups<span class="token punctuation">&quot;</span></span> <span class="token attr-name">eval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[(6, 0, [ref(&#39;mass_mailing.group_mass_mailing_user&#39;)])]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>record</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>具体的菜单定义, 请查看源码 odoo/addons/base/models/ir_ui_menu.py;</p></blockquote>`,8),m=n("code",null,"action",-1),g=n("code",null,"groups",-1),_=n("code",null,"ref",-1),v=n("code",null,"eval",-1),q=p(`<h2 id="菜单的继承" tabindex="-1"><a class="header-anchor" href="#菜单的继承" aria-hidden="true">#</a> 菜单的继承</h2><p>在 odoo 中, 可以通过继承的方式对模型和数据文件进行扩展, 菜单也属于数据的一种, 因此我们也可以通过 xml 来对菜单进行继承/重写; 比如, 我们希望对 odoo 原有的菜单进行修改或者是移动原有菜单所在的位置;</p><p>实际上, 菜单的继承和重写是非常简单, 只需要把 xml 中定义的 id 跟需要重写的菜单保持一致就可以, 也就是通过覆盖的方式, 把对应的属性修改成新的值;</p><p>例如，我们希望把采购- <code>采购</code> 菜单下面的产品菜单单独拿出来作为一个新的菜单 <code>基础数据</code> 的子菜单, 那么我们就可以这么写:</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>record</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>purchase.product_product_menu<span class="token punctuation">&quot;</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ir.ui.menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>menu_purchase_main_data<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Products<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>record</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>menu_purchase_main_data</code> 是我自己新定义的一个菜单, 这样就完成了对原有菜单的父菜单的重写, 界面上的变化, 就是我们把 <code>产品</code> 菜单移走了;</p><p>系统中所有定义的菜单, 都可以在 设置 --&gt; 技术 --&gt; 菜单项目 中可以看到</p><p><img src="`+i+'" alt="menu"></p><h2 id="特殊的菜单" tabindex="-1"><a class="header-anchor" href="#特殊的菜单" aria-hidden="true">#</a> 特殊的菜单</h2><p>odoo 中有一类菜单, 是只有在开发者模式下才可以被看到, 这个菜单就是其他设置/技术特性(<code>base.group_no_one</code>); 如果仅将用户添加到这个组中, 指定了技术特性的菜单是无法在正常模式下被看到的, 只有将菜单绑定其他可见的用户组, 才可以被这个用户组在普通模式下可见;</p>',10);function h(b,f){const s=c("RouterLink");return l(),u("div",null,[d,n("p",null,[a("菜单是 odoo 中最常见的组件之一了, 其基本的作用就是为前端和动作(action) 的纽带, 菜单的定义, 我们在前面已经接触过了, 在 "),t(s,{to:"/pages/web-server/odoo/section-01/%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6.html#%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F"},{default:e(()=>[a("数据文件")]),_:1}),a(" 章节中, 也有简单的介绍, 下面我们来着重看一下菜单的本质是什么;")]),k,n("p",null,[a("xml 中提供的"),t(s,{to:"/pages/web-server/odoo/section-01/%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6.html#%E6%A0%B8%E5%BF%83%E6%93%8D%E4%BD%9C"},{default:e(()=>[a("上下文")]),_:1}),a("操作在菜单数据中也是可用的, 例如上面的 "),m,a(" 和 "),g,a(" 分别使用了 "),_,a(" 和 "),v,a(" 函数;")]),q])}const E=o(r,[["render",h],["__file","菜单.html.vue"]]);export{E as default};
