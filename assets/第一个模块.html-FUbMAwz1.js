import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-DHfXNCua.js";const e="/images/odoo/S02/module.png",h="/images/odoo/S02/update-module.png",t="/images/odoo/S02/library_app.png",k="/images/odoo/S02/xmlId.png",p="/images/odoo/S02/view_metadata.png",d="/images/odoo/S02/app_icon.png",r="/images/odoo/S02/run_test.png",o="/images/odoo/S02/library_book_model.png",g="/images/odoo/S02/access_rules.png",c="/images/odoo/S02/access_rights.png",A="/images/odoo/S02/library_menu.png",B="/images/odoo/S02/book_form_view.png",y="/images/odoo/S02/boo_form_view_sheet.png",u="/images/odoo/S02/http_render.png",F={};function b(m,i){return l(),a("div",null,i[0]||(i[0]=[n('<h2 id="创建应用-模块" tabindex="-1"><a class="header-anchor" href="#创建应用-模块"><span>创建应用(模块)</span></a></h2><p>Odoo 开发通常都是需要创建自己的模块, 而不是在源代码上添加/修改; 下面我们通过创建第一个图书应用, 来学习在 odoo 中二次开发的步骤;</p><h3 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h3><p>模块, 也可以称之为 <code>应用/插件</code>, 在 odoo 中, 一个模块就是一个包含完整功能的应用; 可以新增功能, 或者是修改已有的功能; 模块目录必须包含有一个声明文件或者是描述文件 <code>__manifest__.py</code>;</p><p>一部分模块在 Odoo 中以应用 (app) 的形式出现; 应用是Odoo功能区中的那些顶级模块, 我们希望这一模块出现在 Apps 菜单的顶级. Odoo的基本应用有 <code>CRM</code>, <code>Project</code> 和 <code>HR</code> 等; 非应用模块插件一般依赖于某个应用, 为其添加或扩展功能;</p><p>如果新模块为 Odoo 添加新的或重要的功能, 一般应归类为应用; 而如果模块仅修改已有应用的功能, 那就是一个普通的插件模块; (进入 Apps 菜单并按 Category 分组)</p><figure><img src="'+e+`" alt="odoo-module" tabindex="0" loading="lazy"><figcaption>odoo-module</figcaption></figure><h3 id="addons" tabindex="-1"><a class="header-anchor" href="#addons"><span>addons</span></a></h3><p>在上一节中, 我们也看到了配置文件里面的 <code>addons_path</code> 配置项, addons 路径包含一系列的目录, 默认的 addons 路径为 <code>odoo/addons</code>, 其中存放 odoo 自带的官方应用, 以及 <code>odoo/odoo/addons</code>, 其中为提供核心功能的 <code>base</code> 模块;</p><p>可以看到, 一个 <code>addons</code> 其实就是一个包含了多个模块的目录; 因此可以为我们的图书模块新增一个目录; <code>library</code>; 新增完成之后, 如果需要 odoo 能够识别到, 还需要在配置文件 <code>odoo.conf</code> 里面添加:</p><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[options]</span></span>
<span class="line highlighted"><span>addons_path = D:\\workspace\\odoo-16.0\\odoo\\addons,D:\\workspace\\odoo-16.0\\addons,D:\\workspace\\odoo-16.0\\library</span></span>
<span class="line"><span>admin_passwd = 123</span></span>
<span class="line"><span>csv_internal_sep = ,</span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="脚手架" tabindex="-1"><a class="header-anchor" href="#脚手架"><span>脚手架</span></a></h3><p>odoo 提供了脚手架工具, 能够快速的帮助我们创建一个标准模块所需要的全部文件:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 语法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo-bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scaffold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">modul</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">addons-director</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">y&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建一个 library_app 模块 在 library 目录下</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo-bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scaffold</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> library_app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./library</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建好的模块文件如下:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">library_app/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── __init__.py</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── __manifest__.py</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── controllers</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   ├── __init__.py</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   └── controllers.py</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── demo</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   └── demo.xml</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── models</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   ├── __init__.py</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   └── models.py</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── security</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   └── ir.model.access.csv</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">└── views</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ├── templates.xml</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    └── views.xml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有效的 Odoo 插件目录并包含一个 <code>__manifest__.py</code> 描述文件. 模块还应是可导入的, 因此必须包含一个 <code>__init__.py</code> 文件. 在目录树结构中可以看到这正是前两个文件</p><h3 id="odoo-模块结构" tabindex="-1"><a class="header-anchor" href="#odoo-模块结构"><span>odoo 模块结构</span></a></h3><p>odoo中模块目录结构:</p><ul><li><strong><code>controller</code></strong>: 所有的网页的控制、路由必须要放在这个文件夹下</li><li><strong><code>data</code></strong>: 存放模块预制数据, 例如 res.partner 中新建想初始化几个客户信息 (name, street…)</li><li><strong><code>i18n</code></strong>: 存放国际化文件</li><li><strong><code>models</code></strong>: 存放模型等py代码</li><li><strong><code>security</code></strong>: 存放权限文件</li><li><strong><code>views</code></strong>: 当前模块的前端可视化代码定义都放在这个文件目录下 (odoo中视图的定义), 列表视图、详情页视图、透视表、搜索视图等等…</li><li><strong><code>report</code></strong>: 模块中有关的报表模型或者相应报表视图文件</li><li><strong><code>static</code></strong>: 前端相关的静态文件目录, scss、xml、js、img 等;</li><li><strong><code>__manifest__.py</code></strong>: 该文件用于声明该模块, 并指定一些模块元数据</li></ul><p>创建完成之后, 来修改一下模块的信息, 修改 <code>__manifest__.py</code> 如下:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -*- coding: utf-8 -*-</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;name&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;library_app&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;summary&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Short (1 phrase/line) summary of the module&#39;s purpose, used as</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        subtitle on modules listing or apps.openerp.com&quot;&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;description&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        Long description of module&#39;s purpose</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;author&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Yuan&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;website&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://www.yourcompany.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;category&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Uncategorized&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;version&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;0.1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;depends&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;base&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # &#39;security/ir.model.access.csv&#39;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;views/views.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;views/templates.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # only loaded in demonstration mode</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;demo&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;demo/demo.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line highlighted"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;application&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常见的 <code>manifest</code> 中的键值信息有:</p><ul><li><strong><code>name</code></strong>: 模块的名字;</li><li><strong><code>version</code></strong>: 模块的版本;</li><li><strong><code>description</code></strong>: 描述;</li><li><strong><code>author</code></strong>: 作者;</li><li><strong><code>website</code></strong>: 模块作者的网站地址;</li><li><strong><code>license</code></strong>: 许可;</li><li><strong><code>category</code></strong>: Odoo中的分类类别, 模块的大致业务领域, 对应 web 站点左侧的分类栏;</li><li><strong><code>depends</code></strong>: Odoo模块, 必须在此模块之前加载, 因为这个模块使用它们创建的特性, 或者因为它改变了它们定义的内容. 当安装一个模块时, 它的所有依赖关系都在它之前安装</li><li><strong><code>data</code></strong>: 数据文件列表始终被安装或更新模块时, 从模块根目录列出的路径列表;</li><li><strong><code>demo</code></strong>: 仅在 演示模式 下安装或更新的数据文件列表;</li><li><strong><code>auto_install</code></strong>: 如果是 True, 如果所有的依赖都安装了, 这个模块会自动安装</li><li><strong><code>application</code></strong>: 表示当前模块作为一个独立模块, 安装之后会出现在左侧的展开菜单栏中;</li><li><strong><code>assets</code></strong>: 资源管理, 一般是用来标识 web 端所需要的 js,css,xml 等; (后续详细介绍)</li></ul><h3 id="加载模块" tabindex="-1"><a class="header-anchor" href="#加载模块"><span>加载模块</span></a></h3><p>创建好这一个模块之后, 我们可以验证一下 odoo 是否能够正确的加载我们的模块;</p><p>启动 odoo 服务之后, 打开 debug 模式; (<code>http://localhost:8091/web?debug=1#</code>) 然后在菜单中点击 <code>Update Apps List</code>;</p><figure><img src="`+h+'" alt="update-module" tabindex="0" loading="lazy"><figcaption>update-module</figcaption></figure><p>然后再搜索 <code>library_app</code>:</p><figure><img src="'+t+'" alt="library_app" tabindex="0" loading="lazy"><figcaption>library_app</figcaption></figure><h3 id="设置模块分类" tabindex="-1"><a class="header-anchor" href="#设置模块分类"><span>设置模块分类</span></a></h3><p>模块可以进行分类, 表示相关的功能区, 这些分类用户插件模块的分组, 以及安全组; 如果模块未设置分类, 默认使用 <code>Uncategorized</code>, 上面新建的模块就是这一分类;</p><p>如果对模块使用了不存在的分类, odoo 就会自动创建分类, 我们利用这一特性为图书应用新建一个分类: <code>Services/Library</code>, 编辑 <code>__manifest__.py</code> 修改 <code>category</code>:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;category&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Services/Library&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>分类也可用于组织安全组, 需要相应的 <code>XML ID</code> 来在 <code>XML</code> 数据文件中引用它们;</p><p>分配给模块分类的 <code>XML ID</code> 由 <code>base.module_category_</code> 加上分类名自动生成; 例如: <code>Services/Library</code> 所生成的 <code>XML ID</code> 为 <code>base.module_category_services_library</code>;</p><p>我们可以访问相应的表单视图然后使用开发者菜单中的 <code>View Metadata</code> 选项来查看应用分类的 <code>XML ID</code>;</p><p>应用分类没有菜单项, 但可能过安全组表单访问分类表单, 如下:</p><ol><li>打开 <code>Setting &gt; User &gt; Group</code> 菜单选项, 新建一条测试记录;</li><li>在 <code>Application</code> 字段下拉列表中选择 <code>Library</code>, 点击保存： <img src="'+k+'" alt="xml-id" loading="lazy"></li><li>点击 <code>Application</code> 链接打开所选的分类对应详情表单;</li><li>位于分类表单时, 在开发者菜单中选择 <code>View Metadata</code> 查看所分配的 <code>XML ID</code>; <img src="'+p+'" alt="view-metadata" loading="lazy"></li><li>此时不打算使用就可以删除测试分组了;</li></ol><blockquote><p>此外, 可以在 odoo 的源码中查看内置的分类以及它们的 <code>XML ID</code>, 对应的文件路径为 <code>odoo/addons/base/data/ir_module_category_data.xml</code>;</p></blockquote><h2 id="第一个模块" tabindex="-1"><a class="header-anchor" href="#第一个模块"><span>第一个模块</span></a></h2><p>一些 Odoo 模块创建新应用, 而另一些则对已有应用添加功能或作出修改; 虽然两者的技术组件基本相同, 但应用通常包含一些特征性元素; 我们创建的是一个图书应用, 所以应在模块中包含这些元素;</p><p>一个完整应用包含的元素如下:</p><ul><li>图标: 用于在应用列表中展示;</li><li>顶级菜单: 其下放置应用的所有菜单项;</li><li>模型: 模型对应的是数据库中数据表, 但是模型的概念比表更多, 很多属性并不存储在数据库中;</li><li>视图: 视图层为用户界面的描述, 视图用 XML 定义, 由网页客户端框架生成数据可知的 HTML 视图;</li><li>应用安全组: 通过访问权限仅对指定用户开发;</li></ul><h3 id="添加图标" tabindex="-1"><a class="header-anchor" href="#添加图标"><span>添加图标</span></a></h3><p>推荐一个免费图标库 <a href="https://www.iconarchive.com/search?q=book" target="_blank" rel="noopener noreferrer">图标</a></p><p>模块可以选择一个自己的图标, 对于创建为应用的模块, 这尤为重要, 因为应用会在 apps 菜单下显示图标;</p><p>需要对模块添加 <code>static/description/icon.png</code> 文件; 添加完成之后, 重新启动服务可以看到:</p><figure><img src="'+d+`" alt="app-icon" tabindex="0" loading="lazy"><figcaption>app-icon</figcaption></figure><h3 id="安装模块" tabindex="-1"><a class="header-anchor" href="#安装模块"><span>安装模块</span></a></h3><p>现在我们已经有了一个精简的插件模块, 尚未实现任何功能, 但我们可以通过安装它来检查是否能正常运行;</p><p>安装新模块, 在启动服务的时候使用 <code>-d</code> 和 <code>-i</code> 参数, <code>-d</code> 参数确保我们使用正确的 odoo 数据库, <code>-i</code> 参数接收一个待安装的逗号分隔模块列表;</p><p>对于新建的 <code>library_app</code> 模块, 可以使用以下命令来启动并安装;</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo-bin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./odoo.conf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo_16_test_20231127</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> library_app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们添加了 <code>-d</code> 参数来指定正确的数据库进行安装, 如果在配置文件中已经进行指定, 这个参数就是多余的, 尽管如此, 出于安全保障, 最好在命令行中声明安装的数据库;</p><p>当然, 我们也可以通过 web 界面, 来安装应用; 正常启动之后进入 <code>Apps &gt;</code> 搜索 <code>library_app</code>, 点击安装, 跟上面命令行安装的效果是一致的;</p><h3 id="升级模块" tabindex="-1"><a class="header-anchor" href="#升级模块"><span>升级模块</span></a></h3><p>开发模块是一个不断迭代的过程, 对源码不断的在修改并在 odoo 中应用;</p><p>可以在 <code>web</code> 界面 的 <code>Apps</code> 列表中查找模块并点击 <code>Upgrade</code> 按钮, 这会重新加载数据文件, 应用所做的修改并升级数据库模式; 但如果修改的是 <code>python</code> 逻辑, 点击升级还不够; 需要重启 odoo 服务来重新加载修改后的 python 代码; 有时候模块中即修改了数据文件, 又修改了 python 逻辑, 那么就需要同时进行如上两种操作;</p><p>总结起来:</p><ul><li>修改模型或字段时, 需要进行升级来应用数据库的修改;</li><li>修改 <code>python</code> 逻辑时, 需要重启来重新加载代码文件;</li><li>修改 <code>xml</code> 或者是 <code>csv</code> 文件时, 需要升级来重新应用文件中的数据;</li></ul><p>为避免修改 Odoo 代码时所产生的困惑和阻力, 最简单的方案是在修改代码后通过升级命令重启 Odoo 服务; 可以使用如下命令:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo-bin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./odoo.conf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo_16_test_20231127</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> library_app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dev=all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>-u</code> 参数要求使用 <code>-d</code> 参数, 并接收一个逗号分隔的待升级模块; 例如可以使用 <code>-u library_app, mail</code>; <strong>模块升级后, 所有依赖该模块的模块也会被升级</strong>;</p><h2 id="添加应用菜单" tabindex="-1"><a class="header-anchor" href="#添加应用菜单"><span>添加应用菜单</span></a></h2><p>我们创建的是一个新应用, 因此应包含主菜单项, 在社区版中, 位于左上角的下拉菜单中, 而在企业版中, 则作为附加图标显示在应用切换器主界面中;</p><p>菜单项是使用 <code>xml</code> 数据文件添加的视图组件, 通过创建 <code>views/library_menu.xml</code> 文件添加以下内容来定义菜单项:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">menuitem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;menu_library&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Library&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用户界面, 包含菜单项和操作, 均存储于数据表中供客户端实时读取解释; 上面的文件描述了要载入 Odoo 数据库的记录, <code>&lt;menuitem&gt;</code> 元素指示在存储 Odoo 菜单项的 <code>ir.ui.menu</code> 模型上写入一条记录;</p><p>id 属性也称作 <code>XML ID</code>, 用于唯一标识每个数据元素, 以供其它元素引用; 例如在添加图书子菜单时, 就需要引用父级菜单项的 <code>XML ID</code>, 即 <code>menu_library</code>;</p><p>此处添加的菜单项非常简单, 仅用到了一个属性 <code>name</code>, 其它常用的属性这里没有使用; 常用的属性有:</p><ul><li><strong><code>parent</code></strong>: 父级菜单的 <code>xml id</code>, 如果没有设置, 则将 name 属性作为菜单名称, 并在菜单层次结构中查找位置;</li><li><strong><code>name</code></strong>: 菜单名称;</li><li><strong><code>groups</code></strong>: 菜单的权限组, 如果设置了, 则只有相关权限的组的人员才能访问; <code>res.groups</code> 模型的外部标识符的逗号分隔; 如果以 <code>!</code> 为前缀, 则从该组将从菜单的组中删除;</li><li><strong><code>action</code></strong>: 打开菜单时要执行的操作的外部 <code>xml id</code>;</li><li><strong><code>id</code></strong>: 菜单的 <code>xml id</code>;</li></ul><p>图书模块还不知道 XML 数据文件的存在, 我们还需要在声明中使用 data 属性来添加, 载入到 odoo 实例中; 编辑 <code>__manifest__.py</code>, 添加以下内容:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/library_menu.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>data</code> 声明键是一个在安装或升级模块时加载的数据文件列表; 文件路径为声明文件所丰的根目录的相对路径;</p><h2 id="添加权限组" tabindex="-1"><a class="header-anchor" href="#添加权限组"><span>添加权限组</span></a></h2><p>普通用户在使用功能前需获得相应的权限. Odoo 中使用权限组来实现. 权限授予组, 组中再分配用户;</p><p>Odoo 应用通常有两个组, 访问权限不同:</p><ul><li>用户访问权限, 用于执行日常操作的用户;</li><li>管理员访问权, 包含配置等所有功能的访问权限;</li></ul><p>访问权限相关的文件通常放在 <code>security/</code> 模块子目录中, 因此我们需要创建一个 <code>security/library_security.xml</code> 文件用于权限定义;</p><p>权限组以插件模块使用的相同分类进行分组, 需要找到相应的 <code>XML ID</code> 来为权限组设置分类; 查找 <a href="#%E8%AE%BE%E7%BD%AE%E6%A8%A1%E5%9D%97%E5%88%86%E7%B1%BB"><code>xml id</code></a> 的方法看上面的描述; <code>Services/Library</code> 的 <code>XML ID</code> 为 <code>base.module_category_services_library</code></p><p>下面我们就来添加这图书用户权限组, 它属于前面所定义的 <code>Library</code> 分类, <code>XML ID</code> 为 <code>module_library_category</code>, 还会继承内部用户权限, 在其基础上实现; 如若在用户组表单中打开开发菜单的 <code>View Metadata</code> 选项, 会看到其 <code>XML ID</code> 为 <code>base.group_user</code>;</p><p>添加 <code>security/library_security.xml</code> 内容:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- Library User Group --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;library_group_user&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;res.groups&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;User&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;category_id&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;base.module_category_services_library&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;implied_ids&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[(4, ref(&#39;base.group_user&#39;))]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段XML是对组模型 <code>res.groups</code> 添加一条记录. 记录有三个字段, 分别是:</p><ul><li><strong><code>name</code></strong>: 组名, 普通的字符串;</li><li><strong><code>category_id</code></strong>: 关联应用, 这是一个关联字段, 因此使用了 <code>ref</code> 属性来通过 <code>XML ID</code> 连接此前创建的分类;</li><li><strong><code>implied_ids</code></strong>: 这是一个一对多(one2many)关联字段, 包含一个组列表来涵盖对组内的用户, 对多字段使用了一个有特殊的语法, 我们使用了编号 <code>4</code> 来连接已有的内部用户组 <code>XML ID</code>, <code>base.group_user</code>;</li></ul><p>接下来我们创建管理员组, 授予用户组的所有权限以并为应用管理员保留其它的权限; 因此我们要继承图书用户 <code>library_group_user</code>;</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- Library User Group --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;library_group_user&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;res.groups&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;User&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;category_id&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;base.module_category_services_library&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;implied_ids&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[(4, ref(&#39;base.group_user&#39;))]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- Library Manager Group --&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;library_group_manager&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;res.groups&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Manager&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;category_id&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;base.module_category_services_library&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;implied_ids&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[(4, ref(&#39;library_group_user&#39;))]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;users&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[(4, ref(&#39;base.user_root&#39;)), (4, ref(&#39;base.user_admin&#39;))]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里也和上面一样, 出现了 <code>name</code>, <code>category_id</code>, <code>implied_ids</code>, <code>implied_ids</code> 字段设置为链接向图书用户组, 继承其权限;</p><p>同时还设置了 <code>users</code> 字段; 将该授权给了管理员 <code>admin</code> 和 <code>odooboot</code> 用户组;</p><p>同样需要在声明文件中添加该 <code>XML</code> 文件:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # &#39;security/ir.model.access.csv&#39;,</span></span>
<span class="line highlighted"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;security/library_security.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/views.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/templates.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意 <code>library_security.xml</code> 加在 <code>library_menu.xml</code> 文件之前; 数据文件的加载顺序是非常重要的, 因为我们只能引用已经定义过的标识符, 菜单项经常引用到安全组, 所以建议将安全定义文件放在菜单和视图文件之前;</p><h2 id="自动化测试" tabindex="-1"><a class="header-anchor" href="#自动化测试"><span>自动化测试</span></a></h2><p>编程的最佳实践包含代码的自动化测试, 对于像 Python 这样的动态语言尤为重要, 因为它没有编译这一步, 只有在解释器实际运行代码时才会报语法错误; 好的编辑器可以让我们提前发现问题, 但无法像自动化测试这样帮助我们确定代码是否可如预期运行;</p><p>TDD理论让我们先写测试, 检查错误, 然后开发代码直至通过测试; 受此方法启示, 在添加实际功能前我们先添加模块测试: <code>Odoo</code> 支持基于 <code>Python</code> 内置 <code>unittest</code> 库的自动化测试. 这里我们快速介绍下自动化测试;</p><p>测试需要满足一条件才能被发现, 并由测试运行器执行, 条件如下:</p><ol><li>测试放在 <code>tests/</code> 子目录中, 不同于常规的 <code>Python</code> 代码, 这一目录不需要在顶层的 <code>__init__.py</code> 中导入; 测试引擎会查找模块中的测试目录, 然后运行;</li><li>测试代码文件名应以 <code>test_</code> 开头, 并通过 <code>tests/__init__.py</code> 导入; 测试代码放在 <code>Odoo</code> 框架几个可用测试对象派生出的类中, 由 <code>odoo.tests.common</code> 导入; 最常用的测试类为 <code>TransactionCase</code>. 测试对象使用 <code>setUp()</code> 方法初始化测试用例所使用的数据;</li><li>每个测试用例都是以 <code>test_</code> 打头的方法. 对于 <code>TrasactionCase</code> 测试对象, 每个测试都是独立的事务; 开始时运行 <code>setup</code> 步骤, 结束时回滚; 因此, 下面的步骤不会知道前一个测试所做的修改;</li></ol><p>我们计划在应用中添加 <code>library.book</code> 模型. 下面添加一个简单测试, 用于确定新书是否正确创建;</p><h3 id="添加测试用例" tabindex="-1"><a class="header-anchor" href="#添加测试用例"><span>添加测试用例</span></a></h3><p>我们添加一个简单测试, 检测书的创建; 这要求添加一些配置数据并添加一个测试用例. 测试用例仅用于确定 <code>active</code> 字段的值是否为预期的默认值 <code>True</code>;</p><p>按照如下步骤操作:</p><ol><li>在 <code>tests/__init__.py</code> 中添加如下代码:</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> test_book</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>然后添加实际的测试代码, 位于 <code>tests/test_book.py</code> 文件中, 内容如下：</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> odoo.tests.common </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> TransactionCase</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TestBook</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">TransactionCase</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setUp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> *</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">setUp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*args, **kwargs)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.Book </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.env[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;library.book&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.book1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.Book.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Odoo Development Essentials&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;isbn&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;879-1-78439-279-6&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        })</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test_book_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;New Books are active by default&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">assertEqual</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.book1.active, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>setUp()</code> 方法获取了一个 <code>Book</code> 模型对象的指针, 然后使用它新建一本书;</p><p><code>test_book_create</code> 测试用例添加了一个简单的测试, 检查所创建的书 <code>active</code> 字段的默认值; 完全可以在测试用例中创建这本书, 但我们选择了初始化方法; 原因是我们打算在其它测试用例中使用这本书, 在 <code>setup</code> 中进行创建可以减少重复代码;</p><h3 id="运行测试用例" tabindex="-1"><a class="header-anchor" href="#运行测试用例"><span>运行测试用例</span></a></h3><p>在安装或升级模块时使用 <code>--test-enable</code> 参数可在启动服务时运行测试:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo-bin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./odoo.conf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> library_app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --test-enable</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>Odoo</code> 服务会在升级的模块中查找 <code>tests/</code> 子目录, 然后运行测试; 现在测试会抛出错误, 可以在服务日志中看到 <code>ERROR</code> 消息与测试相关;</p><figure><img src="`+r+`" alt="run-test" tabindex="0" loading="lazy"><figcaption>run-test</figcaption></figure><h3 id="测试访问权限" tabindex="-1"><a class="header-anchor" href="#测试访问权限"><span>测试访问权限</span></a></h3><p>也可以对访问权限进行检测, 确定是否对用户进行了正确的授权;</p><p><code>Odoo</code> 中默认测试由不受权限控制的内部用户 <code>__system__</code> 执行, 所以我们要改变执行测试的用户, 来检测是否授予了正确的访问权, 这通过在 <code>self.env</code> 中修改执行环境来实现, 只需要把 <code>user</code> 属性修改为希望运行测试的用户即可;</p><p>修改 <code>tests/test_book.py</code> 中的 <code>setUp</code> 方法如下:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setUp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> *</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">setUp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*args, **kwargs)</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    user_admin </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.env.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;base.user_admin&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line highlighted"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.env </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">user</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">user_admin)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.Book </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.env[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;library.book&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.book1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.Book.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Odoo Development Essentials&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;isbn&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;879-1-78439-279-6&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在 <code>setUp</code> 方法中添加了两行; 第一条使用 <code>XML ID</code> 查找到 <code>admin</code> 用户记录; 第二行修改用于运行测试的环境 <code>self.env</code>, 将活跃用户修改为 <code>admin</code> 用户;</p><p>不需要对所编写的测试做其它的修改了. 运行的方式不变, 但使用的是 <code>admin</code> 用户, 因为更改了环境;</p><p>图书应用现在有了两具基本测试, 但运行会失败. 接下来我们应添加实现功能的代码; 以让测试可通过;</p><h2 id="实现模型" tabindex="-1"><a class="header-anchor" href="#实现模型"><span>实现模型</span></a></h2><p>模型描述并存储业务对象数据, 如客户关系管理 (CRM), 销售订单或伙伴(客户, 供应商); 模型描述一组字段, 也可添加具体的业务逻辑;</p><p>模型数据结构及关联的业务逻辑以 <code>Python</code> 代码呈献, 使用由 <code>Odoo</code> 模板类派生出来的对象类; 模型与数据表有映射关系, <code>Odoo</code> 框架处理所有的数据库交互, 不仅保持数据库结构与对象的同步, 还将所有事务转译为数据库指令; 负责的框架组件为对象关系映射 (ORM) 组件</p><p>我们的应用用于管理图书, 所以需要一个图书目录模型;</p><h3 id="创建数据模型" tabindex="-1"><a class="header-anchor" href="#创建数据模型"><span>创建数据模型</span></a></h3><p><code>Odoo</code> 开发指南中提到模型的 <code>Python</code> 文件应放在 <code>models</code> 子目录中, 每个模型有一个对应文件; 因此我们在 <code>library_app</code> 模块目录下创建 <code>models/library_book.py</code> 文件;</p><p>首先应让模块使用的 <code>models/</code> 目录; 这表示在 <code>Odoo</code> 加载模块时应由 <code>Python</code> 对其进行导入. 为此, 编辑模块的主 <code>__init__.py</code> 文件添加如下内容:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> library_book</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建 <code>models/library_book.py</code> 内容如下:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -*- coding: utf-8 -*-</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> odoo </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> models, fields, api</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Book</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">models</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Model</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    _name </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;library.book&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    _description </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Book&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 图书名称</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    name </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fields.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Title&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">required</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # isbn</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    isbn </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fields.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ISBN&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 是否激活</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    active </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fields.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Active?&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 发布时间</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    date_published </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fields.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 封面</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cover </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fields.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Binary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Cover&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 发布人</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    publisher_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fields.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Many2one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;res.partner&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Publisher&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 作者</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    author_ids </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fields.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Many2many</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;res.partner&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Authors&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们声明了一个新的模型 <code>library.book</code>, 这是一个继承自 <code>models.Model</code> 的类; 其中:</p><ul><li><strong><code>_name</code></strong> 定义了唯一ID(UID), 在 odoo 中使用它来引用该模型, 模型 ID 使用 <code>.</code> 来分隔关键字;</li><li><strong><code>_description</code></strong> 模型记录的显示名, 在涉及模型记录的用户消息中会用到; 不强制有这个字段, 但没有的话会在服务端日志中显示警告消息;</li><li><strong><code>name</code></strong> 字段用作数据模型的标题, 这里为图书名称;</li><li><strong><code>active</code></strong> 字段用于有效记录, 默认仅有效的记录会显示, 无效的记录会隐藏, 适用于需要隐藏不再使用的记录, 但由于历史原因又要在数据库中保留的情况;</li><li><strong><code>publisher_id</code></strong> 是一个多对一关联字段, 在数据库中称为外键, 它存储对另一个模型记录的关联关系, 这里为 <code>res.partner</code> 用于关联出版公司; (通常多对一字段的名称以 <code>_id</code> 结尾);</li><li><strong><code>author_ids</code></strong>: 是一个多对多关联字段, 可存储其它模型一条或多条记录的关联关系; 在数据库层面, 这种数据并不是存储在一个表格字段中, 而是放在一个自动创建的辅助数据表中, 用于存储两张表之间的关联; (通常对多字段的名称以 <code>_ids</code> 结尾);</li></ul><blockquote><p>仅有模型名使用点号 <code>.</code> 来分隔关键字, 其它如模块、XML 标识符、数据表名等都使用下划线 <code>_</code>;</p></blockquote><blockquote><p>注意: name 和 active 均为特殊字段名; 默认对 Odoo 有特殊用途; name 默认用作记录显示名, 在另一个模型引用它时显示. active 字段用于在用户界面中过滤掉无效记录;</p></blockquote><p>现在还没访问图书模型的菜单, 在下面的视图文档中会添加; 那么查看新创建的模型是否在数据库中正确的被创建, 可以通过在 <code>Settings</code> 顶级菜单中, 进入 <code>Technical</code> &gt; <code>Database Structure</code> &gt; <code>Models</code> 搜索模型的名称(<code>_name</code>) <code>library.book</code></p><figure><img src="`+o+'" alt="library-book" tabindex="0" loading="lazy"><figcaption>library-book</figcaption></figure><p>在 <code>library.book</code> 字段列表中, 我们会看到一些并未声明的其他字段, 这些特殊字段由 odoo 自动为某个模型添加的;</p><ul><li><strong><code>id</code></strong>: 是模型中每一条记录的唯一数据库标识符;</li><li><strong><code>create_date</code></strong>: 和 <code>create_uid</code> 分别记录创建时间和创建人;</li><li><strong><code>display_name</code></strong>: 为所使用的记录提供文本显示, 如果其他记录引用它, 它就会被计算并默认使用 <code>name</code> 字段中的文本;</li><li><strong><code>write_date</code></strong>: 和 <code>write_uid</code> 分别表示最近修改时间和修改人;</li><li><strong><code>__last_update</code></strong>: 是一个计算字段, 它不在数据库中存储, 用于做并发检测;</li></ul><p>现在图书模型在数据库中进行了创建, 但用户仍无法访问; 我们需要添加菜单, 但光加菜单也不行. 要显示菜单, 首先需要授权新模型的访问;</p><h2 id="配置访问权" tabindex="-1"><a class="header-anchor" href="#配置访问权"><span>配置访问权</span></a></h2><p><code>library.book</code> 模型已在数据库进行了创建, 便在加载服务时, 你可能会注意到输出日志中有一条警告信息:</p><figure><img src="'+g+'" alt="access-rules" tabindex="0" loading="lazy"><figcaption>access-rules</figcaption></figure><p>提示消息已经很明确了, 我们的新模型没有权限规则, 所以没人能使用; 我们已为应用添加了权限组, 现在需要授权他们访问应用模型;</p><h3 id="添加访问控制权" tabindex="-1"><a class="header-anchor" href="#添加访问控制权"><span>添加访问控制权</span></a></h3><p>要了解需要哪些信息来为模型添加权限, 可以访问后台 <code>Setting</code> &gt; <code>Technical</code> &gt; <code>Security</code> &gt; <code>Access Rights</code>, 如下图所示:</p><figure><img src="'+c+`" alt="access-rights" tabindex="0" loading="lazy"><figcaption>access-rights</figcaption></figure><p>这些访问权限也称为访问控制列表 <code>ACL</code>, 上图中可以看到一些模型的 <code>ACL</code>, 表明权限组可以对记录执行哪些操作: 读, 写, 创建和删除;</p><p>我们的图书应用会给用户组授予写、读和创建图书记录的权限, 而管理员拥有所有权限, 包含删除记录的权限;</p><p>这一数据可通过模块数据文件提供, 将记录加载到 <code>ir.model.access</code> 模型中; <code>CSV</code> 数据文件的名称必须与所要加载数据的模型 <code>ID</code> 相匹配;</p><p>所以需要新增 <code>security/ir.model.access.csv</code> 文件, 内容如下:</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">id,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">model_id:id,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">group_id:id,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">perm_read,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">perm_write,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">perm_create,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">perm_unlink</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">access_book_user,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BookUser,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">model_library_book,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">library_group_user,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">1,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">access_book_manager,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BookManager,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">model_library_book,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">library_group_manager,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">1,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件的第一行为字段名. <code>CSV</code> 文件中有如下列:</p><ul><li><strong><code>id</code></strong> 是记录的外部标识符, 也称为 <code>XML ID</code>, 需要在模块中唯一;</li><li><strong><code>name</code></strong> 是描述性标题, 可提供信息, 推荐使用唯一的名称;</li><li><strong><code>model_id</code></strong> 是授权模型的外部标识符, 模型有 ORM 自动生成的 <code>XML ID</code>, 对于 <code>library.book</code>, 标识符为 <code>model_library_book</code>;</li><li><strong><code>group_id</code></strong> 是指定授权的权限组, 我们给前文创建的权限组授权: <code>library_group_user</code>, <code>library_group_manager</code>;</li><li><strong><code>perm_</code></strong> 字段的授权, <code>read</code> 读, <code>write</code> 写, <code>create</code> 创建, <code>unlink</code> 删除操作, 使用 <code>1</code> 表示 <code>yes/true</code>, <code>0</code> 表示 <code>no/false</code>;</li></ul><p>然后需要在 <code>__manifest__.py</code> 的 data 属性中添加对新文件的导入; 修改后如下:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;security/library_security.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;security/ir.model.access.csv&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/views.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/templates.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>升级模块使修改在 <code>Odoo</code> 数据库中生效. 此时警告信息就不见了;</p><p>这时, <code>admin</code> 用户就可以访问图书模型; 所以每一条测试应该可通过;</p><h3 id="行级权限规则" tabindex="-1"><a class="header-anchor" href="#行级权限规则"><span>行级权限规则</span></a></h3><p>权限规则定义过滤器限定权限组可访问的记录, 例如, 限定销售员仅能查看自己的报价, 或是会计仅能查看所授权公司的会计账目;</p><p>为展示这个功能, 我们限定图书用户无法访问无效图书; 虽然默认这些书是隐藏的, 但通过 <code>active</code> 等于 <code>True</code> 的条件进行过滤时还是会访问这些记录;</p><p>记录规则位于 <code>Technical</code> 菜单下, 与 <code>Access Rights</code> 同级. 存储于 <code>ir.rule</code> 模型中;</p><p>定义记录规则所需的字段如下:</p><ul><li><strong><code>name</code></strong> 独特的标题, 最好是唯一的;</li><li><strong><code>model_id</code></strong> 对应用规则的模型的引用;</li><li><strong><code>groups</code></strong> 对应用规则的权限组的引用, 这是一个可选项, 如未设置则被视为全局规则 (global 字段自动设置未 True); 全局规则运行机制不同, 其所加的限制非全局规则无法覆盖. 使用特定的语法写入对多字段中;</li><li><strong><code>domain_force</code></strong> 用于访问限制的域过滤器, 采取由 Odoo 所使用的域过滤表达式元组列表语法;</li></ul><p>要对图书应用添加记录规则, 需编辑 <code>security/library_security.xml</code> 文件在结束标签 <code>&lt;/odoo&gt;</code>前再添加一段 <code>&lt;data&gt;</code></p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> noupdate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;book_user_rule&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ir.rule&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Library Book User Access&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;model_id&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;model_library_book&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;domain_force&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            [(&#39;active&#39;,&#39;=&#39;,True)]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;groups&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[(4,ref(&#39;library_group_user&#39;))]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记录规则位于 <code>&lt;data noupdate=&quot;1&quot;&gt;</code> 元素中, 表示这些记录在安装模块时会被创建, 但在模块更新时不会重写; 这么做是允许对规则在后面做自定义但避免在执行模型升级时自定义内容丢失;</p><blockquote><p>开发过程中 <code>&lt;data noupdate=&quot;1&quot;&gt;</code> 会带来麻烦, 因为要修复和修改在模块升级时都不会更新; 有两种处理方法, 一种是在开发时临时使用 <code>noupdate=&quot;0&quot;</code>, 完成修改后改为 <code>noupdate=&quot;1&quot;</code>; 另一种是不进行升级而是重新安装模块, 在命令行中对已安装模块将 <code>-u</code> 换成 <code>-i</code> 即可实现;</p></blockquote><p><code>groups</code> 字段是多对多关联, 使用对多字段所需要的特定的语法, 它是一个元组列表, 每个元组都是一条命令; 本例中使用了 <code>(4, x)</code>, <code>4</code> 表示接下来引用的记录会附加到值之后;</p><h2 id="视图" tabindex="-1"><a class="header-anchor" href="#视图"><span>视图</span></a></h2><p>视图层为用户界面的描述, 视图用 <code>XML</code> 定义, 由网页客户端框架生成数据可知的 <code>HTML</code> 视图; 菜单项可执行窗口动作渲染视图的, 比如: <code>Users</code> 菜单项处理一个同样名为 <code>Users</code> 的操作, 然后使用列表和表单一个视图组合;</p><p>有多种视图类型可供使用. 3种最常用的视图为列表视图 (因历史原因也称为树状视图)、表单视图以及在搜索框右上角的搜索视图;</p><p>下面我们可以逐步的进行改进, 为图书模型添加视图展示; 按照 odoo 的开发者指南, 用户界面的 xml 文件应该放在 <code>views</code> 子目录中;</p><h3 id="添加菜单项" tabindex="-1"><a class="header-anchor" href="#添加菜单项"><span>添加菜单项</span></a></h3><p>我们的应用现在有了存储图书数据的模型, 接下来希望在用户界面中访问它; 首先要做的就是添加相应菜单项;</p><p>编辑 <code>views/library_menu.xml</code> 文件, 添加如下窗口动作和模块菜单项记录:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">menuitem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;menu_library&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Library&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- 打开图书列表的动作 --&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;action_library_book&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ir.actions.act_window&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Library Books&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;res_model&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;library.book&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;view_mode&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;tree,form&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line highlighted"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- 打开图书列表的菜单 --&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">menuitem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;menu_library_book&quot;</span></span>
<span class="line highlighted"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Books&quot;</span></span>
<span class="line highlighted"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;menu_library&quot;</span></span>
<span class="line highlighted"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;action_library_book&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个数据文件包含两条添加到 Odoo 的记录:</p><ul><li><strong><code>&lt;record&gt;</code></strong> 元素定义了一个客户端窗口动作, 按顺序在打开的 <code>library.book</code> 模型时启用列表视图和表单视图;</li><li><strong><code>&lt;menuitem&gt;</code></strong> 运行此前定义的 <code>action_library_book</code> 动作;</li></ul><p>现在再次升级模块来让修改生效. 可能需要刷新浏览器页面来查看新菜单; 完成后就可以看到 <code>Library</code> 顶级菜单, 并包含一个子菜单 <code>Books</code>;</p><figure><img src="`+A+`" alt="library-menu" tabindex="0" loading="lazy"><figcaption>library-menu</figcaption></figure><p>虽然尚未定义界面视图, Odoo 会自动生成视图, 让我们马上就可以查看, 编辑数据; 点击 <code>Library</code> &gt; <code>Books</code> 菜单会显示一个基础列表视图, 点击 <code>Create</code> 按钮会显示上面的界面;</p><p><code>Odoo</code> 自动为我们生成了视图, 但不够完美; 我们可能希望自己着手创建视图, 先从图书表单视图开始;</p><h3 id="创建表单视图" tabindex="-1"><a class="header-anchor" href="#创建表单视图"><span>创建表单视图</span></a></h3><p>视图存储在数据库的 <code>ir.ui.view</code> 模型中的数据记录, 因此我们需要添加数据文件, 其中包含描述视图的 <code>&lt;record&gt;</code> 元素;</p><p>新增 <code>views/book_view.xml</code> 文件来定义表单视图:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;view_form_book&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ir.ui.view&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Book Form&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;model&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;library.book&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;arch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Book&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;author_ids&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> widget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;many2many_tags&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;publisher_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;date_published&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;isbn&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;active&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cover&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> widget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;image&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ir.ui.view</code> 记录有一个定义 <code>XML ID</code> 的记录 id 字段, 在其它记录引用它时使用. 视图记录设置了三个字段的值: <code>name</code>, <code>model</code> 和 <code>arch</code>;</p><p>这是 <code>library.book</code> 模型的视图, 名为 <code>Book Form</code>; 这个名称仅用于提供信息. 无需唯一, 但应易于分辨所指向的记录; 其实可以完全省略 <code>name</code>, 那样会按模型名和视图类型来自动生成;</p><p>最重要的字段是 <code>arch</code>, 因其包含了视图的定义, 其中第一个元素是 <code>&lt;form&gt;</code> 标签; 它声明了所定义的视图类型, 其它元素因由其包裹;</p><p>接着, 我们在表单中使用 <code>&lt;group&gt;</code> 元素定义了分组; 它可包含 <code>&lt;field&gt;</code> 元素及其它元素, 包括内嵌 <code>group</code> 元素. <code>group</code> 添加一个两列的隐形风格, 很适合字段, 因为其占据的正是两列, 一列为标签文件, 另一列为输入框;</p><p>我们为每个字段添加一个 <code>&lt;field&gt;</code> 元素以进行显示. 字段会自动使用相应的默认微件(<code>widget</code>), 比如日期字段使用日期选择微件; 在某些情况下，我们可能会添加 <code>widget</code> 属性来使用指定的微件; <code>author_ids</code> 字段就是这么做的, 使用一个将作者显示为标签列表的我邮件, 还有 <code>cover</code> 字段, 使用处理图片的 <code>widget</code></p><p>不要忘记在声明文件的 <code>data</code> 中加入新建文件, 否则我们的模块将无法识别并加载该文件;</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;security/library_security.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;security/ir.model.access.csv&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/library_menu.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/book_view.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/templates.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要使修改载入 Odoo 数据库, 就要更新模块. 还需要重新加载网页来看修改效果, 这里可以使用快捷的启动命令:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> odoo-bin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">doo.conf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> library_app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dev=all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="`+B+`" alt="book-form-view" tabindex="0" loading="lazy"><figcaption>book-form-view</figcaption></figure><h3 id="业务文档表单视图" tabindex="-1"><a class="header-anchor" href="#业务文档表单视图"><span>业务文档表单视图</span></a></h3><p>上面的部分创建了一个基础表单视图, 还可以做一些改进. 对于文档模型, Odoo 有一个模拟纸张的展示样式; 表单包含两个顶级元素: 包含操作按钮的 <code>&lt;header&gt;</code> 元素和包含数据字段的 <code>&lt;sheet&gt;</code> 元素;</p><p>可以使用它修改上一节中定义的基础 <code>&lt;form&gt;</code> 元素:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Book&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sheet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;author_ids&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> widget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;many2many_tags&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;publisher_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;date_published&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;isbn&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;active&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cover&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> widget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;image&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sheet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>因为上面我们启动的时候使用的 --dev=all 参数, 修改视图之后可以直接刷新页面, 看效果;</p></blockquote><figure><img src="`+y+`" alt="book-form-view-sheet" tabindex="0" loading="lazy"><figcaption>book-form-view-sheet</figcaption></figure><p>表单可包含按钮, 用于执行动作; 这类按钮可以运行窗口动作, 通常是打开另一个表单, 或运行 <code>Python</code> 的方法; 按钮可以放在顶部的 <code>&lt;header&gt;</code> 区中, 或是表单的其它位置;</p><h3 id="添加动作按钮" tabindex="-1"><a class="header-anchor" href="#添加动作按钮"><span>添加动作按钮</span></a></h3><p>我们将演示在头部添加一个按钮检测图书的 <code>ISBN</code> 是否有效. 使用的代码为图书模型中的方法, 名为 <code>button_check_isbn()</code></p><p>我们尚未添加该方法, 但可以先在表单中添加相应的按钮, 代码如下:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;button_check_isbn&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;object&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Check ISBN&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个按钮的基本属性有:</p><ul><li><strong><code>string</code></strong> 定义按钮显示的文本;</li><li><strong><code>type</code></strong> 执行的动作类型, <code>object</code> 或者是 <code>action</code>;</li><li><strong><code>name</code></strong> 所运行的动作的 <code>ID</code>, 对于 <code>object</code>, <code>name</code> 为方法名; 而 <code>action</code> 使用动作的记录 <code>ID</code>;</li><li><strong><code>class</code></strong> 应用 css 样式的可选属性, 与 HTML 中用法一致;</li></ul><blockquote><p>这个时候动作按钮还无法使用, 因为需要添加业务逻辑; 下面会完善</p></blockquote><h3 id="列表视图和搜索视图" tabindex="-1"><a class="header-anchor" href="#列表视图和搜索视图"><span>列表视图和搜索视图</span></a></h3><p>定义列表视图使用 <code>&lt;tree&gt;</code> 视图类型; 其结构非常直白; <code>&lt;tree&gt;</code> 顶级元素应包含以列形式展示的字段; 我们可以直接在 <code>book_view.xml</code> 文件中添加 <code>&lt;tree&gt;</code> 视图的定义:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;view_tree_book&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ir.ui.view&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Book List&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;model&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;library.book&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;arch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;author_ids&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> widget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;many2many_tags&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;publisher_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;date_published&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通常, 列表视图的右上角会显示一个搜索框, 搜索框的字段可用过滤器 <code>&lt;search&gt;</code> 视图定义, 同样, 还是直接在 <code>book_view.xml</code> 添加内容:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;view_search_book&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ir.ui.view&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Book Filters&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;model&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;library.book&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;arch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;publisher_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">filter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;filter_active&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Active&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                domain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[(&#39;active&#39;,&#39;=&#39;,True)]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">filter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;filter_inactive&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Inactive&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                domain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[(&#39;active&#39;,&#39;=&#39;,False)]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">record</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>搜索视图使用了两种元素定义: <code>&lt;field&gt;</code> 和 <code>&lt;filter&gt;</code></p><ul><li><strong><code>&lt;field&gt;</code></strong> 元素定义在搜索框中输入自动搜索的字段. 这里添加了 <code>publisher_id</code> 自动显示出版商字段的搜索结果;</li><li><strong><code>&lt;filter&gt;</code></strong> 元素添加预定义的过滤条件, 用户通过点击来切换; 过滤条件使用了 <code>Odoo</code> 的作用域过滤语法;</li></ul><h2 id="实现业务层" tabindex="-1"><a class="header-anchor" href="#实现业务层"><span>实现业务层</span></a></h2><p>业务逻辑层编写应用的业务规则, 如验证和自动化操作; 现在我们来为 <code>Check ISBN</code> 按钮添加逻辑. 通过在 <code>library.book</code> 模型的 <code>Python</code> 类中编写方法来实现;</p><h3 id="添加业务逻辑" tabindex="-1"><a class="header-anchor" href="#添加业务逻辑"><span>添加业务逻辑</span></a></h3><p>现代 <code>ISBN</code> 包含 13 位数字, 最后一位是由前 12 位计算所得的检查位; 如果 <code>digits</code> 包含了前 12 位, Python 代码返回相应的检查位;</p><p>因此我们可以为 <code>class Book(...)</code> 类添加一个校验方法检测记录的 <code>ISBN</code>, 返回 <code>True</code> 或 <code>False</code>;</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> _check_isbn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">ensure_one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    isbn </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.isbn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;-&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 为保持兼容性 Alan 自行添加</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    digits </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> isbn </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">isdigit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(digits) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 13</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ponderations </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        terms </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a,b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> zip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(digits[:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], ponderations)]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        remain </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(terms) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        check </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> remain </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> remain </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> else</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> digits[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> check</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个方法不能直接在表单按钮中直接使用, 因为它没有提供结果的视图线索. 下面我们会添加另一个方法;</p><p>我们使用 <code>Odoo</code> 的 <code>ValidationError</code> 异常告知用户验证的结果, 首先需要导入异常类; 编辑 <code>models/library_book.py</code>, <code>Python</code> 文件在文件顶部添加, 如下:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> odoo.exceptions </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ValidationError</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后还是在 <code>models/library_book.py</code> 文件的 <code>Book</code> 类中加入如下代码:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> button_check_isbn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> book </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> book.isbn:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            raise</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> ValidationError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Please provide an ISBN for </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> book.name)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> book.isbn </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> book.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">_check_isbn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            raise</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> ValidationError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is an invalid ISBN&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> book.isbn)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的 <code>self</code> 表示一个记录集, 我们可以遍历每条记录, 执行检测; 这个方法是用于表单按钮, 所以理论上 <code>self</code> 为单条记录, 不需要使用 <code>for</code> 循环;</p><p>其实我们在辅助方法 <code>_check_isbn()</code> 做了类似的事; 如果使用这种方法, 推荐在方法的起始处添加 <code>self.ensure_one()</code>, 在 <code>self</code> 不是单条记录时迟早报错; 但我们选择了 <code>for</code> 循环来支持多条记录, 让代码可以执行之后可能希望有的多验证功能;</p><p>代码遍历每本选定的图书记录, 如果图书的 <code>ISBN</code> 有值, 会检测其有效性; 如无效, 则向用户抛出警告信息;</p><p>模型方法无需返回任何值, 便我们应至少让其返回 <code>True</code>; 因为并非所有实现了 <code>XML</code> 远程过程调用(RPC)的客户端都支持 <code>None/Null</code> 值, 那样在方法未返回值时可能会抛出错误;</p><p>图书应用已包含所有首次迭代所需的后台功能了, 我在实现了 <code>Odoo</code> 多层的组件: 模型、视图和业务逻辑; 但Odoo还支持创建面向外部的页面;</p><h2 id="网站用户界面-ui" tabindex="-1"><a class="header-anchor" href="#网站用户界面-ui"><span>网站用户界面(UI)</span></a></h2><p>Odoo 还提供了一个 web 开发框架, 用于开发与后台应用深度集成的功能; 第一步我们来创建一个显示有效图书列表的简单网页;</p><p>在请求 <code>http://localhost:8091/library/books</code> 页面时会进行响应, 所以 <code>/library/books</code> 是用于实施的 <code>URL</code> 端点;</p><h3 id="添加控制器" tabindex="-1"><a class="header-anchor" href="#添加控制器"><span>添加控制器</span></a></h3><p><code>Web</code> 控制器是负责渲染网页的组件; 控制器是 <code>http.Controller</code> 派生的 <code>Python</code> 方法; 该方法使用 <code>@http.route</code> 控制器与一个或多个URL端点绑定; 访问其中任一 <code>URL</code> 时会执行控制器代码, 返回向用户展示的 <code>HTML</code>; 通常使用 <code>QWeb</code> 模板引擎渲染 <code>HTML</code>;</p><p>按惯例控制器代码放在 <code>controllers</code> 子目录中, 添加控制器, 首先编辑 <code>library_app/__init__.py</code> 文件, 导入 <code>controllers</code> 子目录如下:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -*- coding: utf-8 -*-</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> controllers</span></span>
<span class="line highlighted"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来创建实际的控制器文件 <code>library_app/controllers/main.py</code> , 并添加如下代码:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> odoo </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> http</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Books</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">http</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Controller</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    @http</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">route</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/library/books&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> auth</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;user&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        Book </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> http.request.env[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;library.book&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        books </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Book.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> http.request.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;library_app.book_list_template&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;books&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: books})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们创建了一个控制器对象类, 继承自 <code>http.Controller</code>, <code>@http.route</code> 装饰器为方法添加了 URL 端点; 在控制器方法内, 我们可以使用 <code>http.request.env</code> 访问运行环境; 使用它来获取目录中所有有效图书的记录集;</p><p>最后使用 <code>http.request.render()</code> 来处理 <code>library_app.index_template</code> <code>Qweb</code> 模板并生成输出 HTML. 可通过字典向模板传值, 这里传递了 <code>books</code> 记录集;</p><p>这时如果重启 <code>Odoo</code> 服务来重载 <code>Python</code> 代码, 并访问 <code>/library/books</code> 会得到一条服务端错误日志: <code>ValueError: External ID not found in the system: library_app.book_list_template</code>. 这是因为我们还没有定义模板. 下面就一起来定义模板;</p><h3 id="添加-qweb-模板" tabindex="-1"><a class="header-anchor" href="#添加-qweb-模板"><span>添加 QWeb 模板</span></a></h3><p><code>QWeb</code> 模板和其它视图类型一并存储, 相应的数据库文件通常放在 <code>/views</code> 子目录下; 我们创建 <code>views/book_list_template.xml</code> 文件如下:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;?</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">xml</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1.0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;utf-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;book_list_template&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Book List&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;wrap&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;container&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Books&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">t</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> t-foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;books&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> t-as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;book&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;row&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> t-field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;book.name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> t-field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;book.date_published&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> t-field</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;book.publisher_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">odoo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;template&gt;</code> 元素用于声明 <code>QWeb</code> 模板, 它事实上是一个存储模板的 <code>base</code> 模型 – <code>ir.ui.view</code> 记录的快捷方式; 模板中包含要使用的 <code>HTML</code>. 并使用 <code>Qweb</code> 的特定属性;</p><p><code>t-foreach</code> 用于遍历变量 <code>books</code> 变量中的每一项, 通过控制器的 <code>http.request.render()</code> 调用来获取. <code>t-field</code> 属性用于渲染 <code>Odoo</code> 记录字段的内容;</p><p>和其它XML数据文件一样, <code>QWeb</code> 模板数据文件需要在模块声明文件中进行声明, 这样才会加载并被使用. 因此需要编辑 <code>__manifest__.py</code> 文件, 添加如下内容:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;security/library_security.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;security/ir.model.access.csv&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/library_menu.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/book_view.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/templates.xml&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;views/book_list_template.xml&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>升级模块, 然后访问 <code>http://localhost:8091/library/books</code>, 就可以看到以下界面:</p><figure><img src="`+u+'" alt="http-render" tabindex="0" loading="lazy"><figcaption>http-render</figcaption></figure><p>接下来, 我们就从第一个模块开始认识 odoo 框架;</p>',256)]))}const E=s(F,[["render",b],["__file","第一个模块.html.vue"]]),f=JSON.parse('{"path":"/pages/web-server/odoo/section-01/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%A8%A1%E5%9D%97.html","title":"","lang":"zh-CN","frontmatter":{"headerDepth":3,"prev":{"link":"/pages/web-server/odoo/section-01/环境搭建.md"},"next":{"link":"/pages/web-server/odoo/section-01/基本字段.md"},"description":"创建应用(模块) Odoo 开发通常都是需要创建自己的模块, 而不是在源代码上添加/修改; 下面我们通过创建第一个图书应用, 来学习在 odoo 中二次开发的步骤; 模块 模块, 也可以称之为 应用/插件, 在 odoo 中, 一个模块就是一个包含完整功能的应用; 可以新增功能, 或者是修改已有的功能; 模块目录必须包含有一个声明文件或者是描述文件 _...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/user-hope/user-hope.github.io/pages/web-server/odoo/section-01/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%A8%A1%E5%9D%97.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:description","content":"创建应用(模块) Odoo 开发通常都是需要创建自己的模块, 而不是在源代码上添加/修改; 下面我们通过创建第一个图书应用, 来学习在 odoo 中二次开发的步骤; 模块 模块, 也可以称之为 应用/插件, 在 odoo 中, 一个模块就是一个包含完整功能的应用; 可以新增功能, 或者是修改已有的功能; 模块目录必须包含有一个声明文件或者是描述文件 _..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/module.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/module.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/update-module.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/library_app.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/xmlId.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/view_metadata.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/app_icon.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/run_test.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/library_book_model.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/access_rules.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/access_rights.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/library_menu.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/book_form_view.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/boo_form_view_sheet.png\\",\\"https://github.com/user-hope/user-hope.github.io/images/odoo/S02/http_render.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://github.com/user-hope/user-hope.github.io\\"}]}"]]},"headers":[{"level":2,"title":"创建应用(模块)","slug":"创建应用-模块","link":"#创建应用-模块","children":[{"level":3,"title":"模块","slug":"模块","link":"#模块","children":[]},{"level":3,"title":"addons","slug":"addons","link":"#addons","children":[]},{"level":3,"title":"脚手架","slug":"脚手架","link":"#脚手架","children":[]},{"level":3,"title":"odoo 模块结构","slug":"odoo-模块结构","link":"#odoo-模块结构","children":[]},{"level":3,"title":"加载模块","slug":"加载模块","link":"#加载模块","children":[]},{"level":3,"title":"设置模块分类","slug":"设置模块分类","link":"#设置模块分类","children":[]}]},{"level":2,"title":"第一个模块","slug":"第一个模块","link":"#第一个模块","children":[{"level":3,"title":"添加图标","slug":"添加图标","link":"#添加图标","children":[]},{"level":3,"title":"安装模块","slug":"安装模块","link":"#安装模块","children":[]},{"level":3,"title":"升级模块","slug":"升级模块","link":"#升级模块","children":[]}]},{"level":2,"title":"添加应用菜单","slug":"添加应用菜单","link":"#添加应用菜单","children":[]},{"level":2,"title":"添加权限组","slug":"添加权限组","link":"#添加权限组","children":[]},{"level":2,"title":"自动化测试","slug":"自动化测试","link":"#自动化测试","children":[{"level":3,"title":"添加测试用例","slug":"添加测试用例","link":"#添加测试用例","children":[]},{"level":3,"title":"运行测试用例","slug":"运行测试用例","link":"#运行测试用例","children":[]},{"level":3,"title":"测试访问权限","slug":"测试访问权限","link":"#测试访问权限","children":[]}]},{"level":2,"title":"实现模型","slug":"实现模型","link":"#实现模型","children":[{"level":3,"title":"创建数据模型","slug":"创建数据模型","link":"#创建数据模型","children":[]}]},{"level":2,"title":"配置访问权","slug":"配置访问权","link":"#配置访问权","children":[{"level":3,"title":"添加访问控制权","slug":"添加访问控制权","link":"#添加访问控制权","children":[]},{"level":3,"title":"行级权限规则","slug":"行级权限规则","link":"#行级权限规则","children":[]}]},{"level":2,"title":"视图","slug":"视图","link":"#视图","children":[{"level":3,"title":"添加菜单项","slug":"添加菜单项","link":"#添加菜单项","children":[]},{"level":3,"title":"创建表单视图","slug":"创建表单视图","link":"#创建表单视图","children":[]},{"level":3,"title":"业务文档表单视图","slug":"业务文档表单视图","link":"#业务文档表单视图","children":[]},{"level":3,"title":"添加动作按钮","slug":"添加动作按钮","link":"#添加动作按钮","children":[]},{"level":3,"title":"列表视图和搜索视图","slug":"列表视图和搜索视图","link":"#列表视图和搜索视图","children":[]}]},{"level":2,"title":"实现业务层","slug":"实现业务层","link":"#实现业务层","children":[{"level":3,"title":"添加业务逻辑","slug":"添加业务逻辑","link":"#添加业务逻辑","children":[]}]},{"level":2,"title":"网站用户界面(UI)","slug":"网站用户界面-ui","link":"#网站用户界面-ui","children":[{"level":3,"title":"添加控制器","slug":"添加控制器","link":"#添加控制器","children":[]},{"level":3,"title":"添加 QWeb 模板","slug":"添加-qweb-模板","link":"#添加-qweb-模板","children":[]}]}],"readingTime":{"minutes":34.71,"words":10414},"filePathRelative":"pages/web-server/odoo/section-01/第一个模块.md","autoDesc":true,"excerpt":"<h2>创建应用(模块)</h2>\\n<p>Odoo 开发通常都是需要创建自己的模块, 而不是在源代码上添加/修改; 下面我们通过创建第一个图书应用, 来学习在 odoo 中二次开发的步骤;</p>\\n<h3>模块</h3>\\n<p>模块, 也可以称之为 <code>应用/插件</code>, 在 odoo 中, 一个模块就是一个包含完整功能的应用; 可以新增功能, 或者是修改已有的功能; 模块目录必须包含有一个声明文件或者是描述文件 <code>__manifest__.py</code>;</p>\\n<p>一部分模块在 Odoo 中以应用 (app) 的形式出现; 应用是Odoo功能区中的那些顶级模块, 我们希望这一模块出现在 Apps 菜单的顶级. Odoo的基本应用有 <code>CRM</code>, <code>Project</code> 和 <code>HR</code> 等; 非应用模块插件一般依赖于某个应用, 为其添加或扩展功能;</p>"}');export{E as comp,f as data};
