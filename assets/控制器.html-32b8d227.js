import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as e,c,a as n,b as a,d as u,e as s}from"./app-9b0cd270.js";const l={},i=s(`<h2 id="控制器" tabindex="-1"><a class="header-anchor" href="#控制器" aria-hidden="true">#</a> 控制器</h2><p>控制器时处理页面请求的处理器, 通常的 <code>http</code> 和 <code>json</code> 请求都是由 <code>controller</code> 负责处理和转发的, odoo 内置的 web 服务器 <code>werkzeug</code> 跟 <code>python</code> 著名的 <code>web</code> 框架 <code>Flask</code> 用的是同一个;</p><p><code>odoo</code> 的控制器是通过继承 <code>Controller</code> 来创建的。 路由是通过用 <code>route()</code> 修饰的方法定义的:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyController</span><span class="token punctuation">(</span>odoo<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Controller<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token decorator annotation punctuation">@route</span><span class="token punctuation">(</span><span class="token string">&#39;/some_url&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&#39;public&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">handler</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> stuff<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><p><code>route()</code> 方法装饰的函数被注册为一个路由, 如果方法未添加装饰器, 则为不可见状态; (web访问不到); 除了 <code>route()</code> 方法, <code>http</code> 对象还提供了一些常用的方法;</p><h3 id="route" tabindex="-1"><a class="header-anchor" href="#route" aria-hidden="true">#</a> route</h3><p><strong><code>odoo.http.route(route=None, **kw)</code></strong></p><p>装饰器让所装饰的方法成为请求的处理器, 该方法必须要是 <code>Controller</code> 子类的一部分; 接收以下参数:</p>`,9),r=n("strong",null,[n("code",null,"route")],-1),k={href:"http://werkzeug.pocoo.org/docs/routing/",target:"_blank",rel:"noopener noreferrer"},d=s("<li><strong><code>type</code></strong>: 请求的类型; 可选 <code>json</code> 或 <code>http</code>; 它描述了在哪里可以找到请求参数以及如何序列化响应;</li><li><strong><code>auth</code></strong>: 认证方法的类型, 可为以下类型: <ul><li><strong><code>user</code></strong>: 用户必须认证且当前请求将使用用户的权限进行执行;</li><li><strong><code>public</code></strong>: 用户可认证也可不认证; 如未认证, 当前请求会使用共享 <code>Public</code> 用户进行执行;</li><li><strong><code>none</code></strong>: 即使没有数据库, 该方法也始终处于活动状态. 主要由框架和认证模块使用;</li></ul></li><li><strong><code>methods</code></strong>: 该路由适用的 http 请求方法; list 类型, 如果未指定, 则允许使用所有的请求方法;</li><li><strong><code>cors</code></strong>: http 请求头的 <code>Access-Control-Allow-Origin</code> cors 值;</li><li><strong><code>csrf</code></strong>: 是否应为路由启用 CSRF 保护. 默认情况下对 <code>http</code> 类型请求启用, 对 <code>json</code> 类型请求默认禁用;</li><li><strong><code>website</code></strong>: 是否是网站的 URL;</li>",6),v=s(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;/my/invoices&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/my/invoices/page/&lt;int:page&gt;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">portal_my_invoices</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> page<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> date_begin<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> date_end<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> sortby<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> filterby<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>
        values <span class="token operator">=</span> self<span class="token punctuation">.</span>_prepare_my_invoices_values<span class="token punctuation">(</span>page<span class="token punctuation">,</span> date_begin<span class="token punctuation">,</span> date_end<span class="token punctuation">,</span> sortby<span class="token punctuation">,</span> filterby<span class="token punctuation">)</span>
        
        pager <span class="token operator">=</span> portal_pager<span class="token punctuation">(</span><span class="token operator">**</span>values<span class="token punctuation">[</span><span class="token string">&#39;pager&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

        invoices <span class="token operator">=</span> values<span class="token punctuation">[</span><span class="token string">&#39;invoices&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>pager<span class="token punctuation">[</span><span class="token string">&#39;offset&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        request<span class="token punctuation">.</span>session<span class="token punctuation">[</span><span class="token string">&#39;my_invoices_history&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> invoices<span class="token punctuation">.</span>ids<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">]</span>

        values<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token string">&#39;invoices&#39;</span><span class="token punctuation">:</span> invoices<span class="token punctuation">,</span>
            <span class="token string">&#39;pager&#39;</span><span class="token punctuation">:</span> pager<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">&quot;account.portal_my_invoices&quot;</span><span class="token punctuation">,</span> values<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> request</h3><p><code>request</code> 对象为客户端发起请求的对象, 它提供了以下方法, 便于操作 <code>request</code> 获取参数和返回参数:</p><ul><li><strong><code>update_env(user=None, context=None, su=None)</code></strong>: 更新当前的请求环境; 它接收以下参数: <ul><li><strong><code>user</code></strong>: 可选的用户/用户ID来更改当前用户;</li><li><strong><code>context</code></strong>: 可选的上下文字典来更改当前上下文;</li><li><strong><code>su</code></strong>: bool, 是否使用超级用户模式;</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>request<span class="token punctuation">.</span>update_env<span class="token punctuation">(</span>user<span class="token operator">=</span>request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>uid<span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>env<span class="token punctuation">.</span>context<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong><code>update_context(**overrides)</code></strong>: 使用 <code>overrides</code> 的值覆盖当前请求的上下文, 如果需要替换整个上下文, 请改用 <code>update_env()</code>;</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>request<span class="token punctuation">.</span>update_context<span class="token punctuation">(</span><span class="token operator">**</span>request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>context<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong><code>geoip</code></strong>: 获取远程地址的地理位置; 当地理定位成功的时候, 返回的是一个字段, 格式为:</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># geoip = request.geoip</span>

<span class="token punctuation">{</span>
    <span class="token string">&quot;city&quot;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token string">&quot;country_code&quot;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token string">&quot;country_name&quot;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token string">&quot;latitude&quot;</span><span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">,</span>
    <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">,</span>
    <span class="token string">&quot;region&quot;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token string">&quot;time_zone&quot;</span><span class="token punctuation">:</span> <span class="token builtin">str</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>csrf_token(time_limit=None)</code></strong>: 生成并返回当前会话的 CSRF 令牌; <ul><li><strong><code>time_limit</code></strong>: CSRF 令牌应该仅在指定的持续时间(以秒为单位)内有效, 默认为 48 小时, 只要当前用户的会话有效, 令牌就不会有效;</li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/shop/cart/update<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POST<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>csrf_token<span class="token punctuation">&quot;</span></span> <span class="token attr-name">t-att-value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request.csrf_token()<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>product_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>product_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">t-att-value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>channel.product_id.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>validate_csrf(csrf)</code></strong>: 校验 csrf 值是否合法;</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/website/form/&lt;string:model_name&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> csrf<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">website_form</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model_name<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        csrf_token <span class="token operator">=</span> request<span class="token punctuation">.</span>params<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&#39;csrf_token&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>uid <span class="token keyword">and</span> <span class="token keyword">not</span> request<span class="token punctuation">.</span>validate_csrf<span class="token punctuation">(</span>csrf_token<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> BadRequest<span class="token punctuation">(</span><span class="token string">&#39;Session expired (invalid CSRF token)&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>default_lang()</code></strong>: 获取用户默认的语言;</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>context<span class="token punctuation">[</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>default_lang<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong><code>get_http_params()</code></strong>: 从请求的表单(<code>application/x-www-form-urlencoded</code> / <code>multipart/form-data</code>)中提取数据, 以 <code>key:val</code> 的形式返回;</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>params <span class="token operator">=</span> request<span class="token punctuation">.</span>get_http_params<span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong><code>make_response(data, headers=None, cookies=None, status=200)</code></strong>: 构造一个完整的返回对象给客户端; <ul><li><strong><code>data</code></strong>: response body;</li><li><strong><code>headers</code></strong>: http 请求头;</li><li><strong><code>cookies</code></strong>: 设置客户端的 cookie;</li><li><strong><code>status</code></strong>: http 请求的状态码;</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 返回 json 格式</span>
<span class="token decorator annotation punctuation">@route</span><span class="token punctuation">(</span><span class="token string">&#39;/websocket/health&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span> save_session<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">health</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   <span class="token punctuation">(</span><span class="token string">&#39;Cache-Control&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;no-store&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span>make_response<span class="token punctuation">(</span>data<span class="token punctuation">,</span> headers<span class="token punctuation">)</span>
        
<span class="token comment"># 返回 pdf 数据流</span>
<span class="token decorator annotation punctuation">@route</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;/my/picking/pdf/&lt;int:picking_id&gt;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">portal_my_picking_report</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> picking_id<span class="token punctuation">,</span> access_token<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>

        pdf <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;ir.actions.report&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sudo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_render_qweb_pdf<span class="token punctuation">(</span><span class="token string">&#39;stock.action_report_delivery&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>picking_sudo<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        pdfhttpheaders <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/pdf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span><span class="token string">&#39;Content-Length&#39;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pdf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span>make_response<span class="token punctuation">(</span>pdf<span class="token punctuation">,</span> headers<span class="token operator">=</span>pdfhttpheaders<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>make_json_response(data, headers=None, cookies=None, status=200)</code></strong>: 返回 json 格式的数据;</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/web/bundle/&lt;string:bundle_name&gt;&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">bundle</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> bundle_name<span class="token punctuation">,</span> <span class="token operator">**</span>bundle_params<span class="token punctuation">)</span><span class="token punctuation">:</span>

        <span class="token keyword">if</span> <span class="token string">&#39;lang&#39;</span> <span class="token keyword">in</span> bundle_params<span class="token punctuation">:</span>
            request<span class="token punctuation">.</span>update_context<span class="token punctuation">(</span>lang<span class="token operator">=</span>bundle_params<span class="token punctuation">[</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

        debug <span class="token operator">=</span> bundle_params<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;debug&#39;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>debug<span class="token punctuation">)</span>
        files <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&quot;ir.qweb&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_get_asset_nodes<span class="token punctuation">(</span>bundle_name<span class="token punctuation">,</span> debug<span class="token operator">=</span>debug<span class="token punctuation">,</span> js<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> css<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
            <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> tag<span class="token punctuation">,</span>
            <span class="token string">&quot;src&quot;</span><span class="token punctuation">:</span> attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;data-src&quot;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> content<span class="token punctuation">,</span>
        <span class="token punctuation">}</span> <span class="token keyword">for</span> tag<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> content <span class="token keyword">in</span> files<span class="token punctuation">]</span>

        <span class="token keyword">return</span> request<span class="token punctuation">.</span>make_json_response<span class="token punctuation">(</span>data<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>not_found(description=None)</code></strong>: http 404 状态码的快捷方式;</li><li><strong><code>render(template, qcontext=None, lazy=True, **kw)</code></strong>: <code>qweb</code> 模板的延迟渲染; 结束调用之后将渲染的模板返回给客户端; <ul><li><strong><code>template</code></strong>: 要渲染的模板的名称; 通常是 <code>&lt;moduleName&gt;.&lt;templateName&gt;</code>;</li><li><strong><code>qcontext</code></strong>: 模板渲染时候使用的上下文;</li><li><strong><code>lazy</code></strong>: 模板渲染是否推迟到最后一刻;</li><li><strong><code>kw</code></strong>: 转发到 <code>werkzeug</code> 的 <code>Response</code> 对象;</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/website/info&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> sitemap<span class="token operator">=</span>sitemap_website_info<span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">website_info</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        Module <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;ir.module.module&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sudo<span class="token punctuation">(</span><span class="token punctuation">)</span>
        apps <span class="token operator">=</span> Module<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;installed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;application&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        l10n <span class="token operator">=</span> Module<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;installed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=like&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;l10n_%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        values <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;apps&#39;</span><span class="token punctuation">:</span> apps<span class="token punctuation">,</span>
            <span class="token string">&#39;l10n&#39;</span><span class="token punctuation">:</span> l10n<span class="token punctuation">,</span>
            <span class="token string">&#39;version&#39;</span><span class="token punctuation">:</span> odoo<span class="token punctuation">.</span>service<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exp_version<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">&#39;website.website_info&#39;</span><span class="token punctuation">,</span> values<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> response</h3><p>一般情况下, 我们直接返回给客户端的对象都是 <code>HttpResponse</code>, odoo 已经帮我们封装好了一个 <code>make_response</code> 方法; 直接调用即可;</p><p>除了 <code>make_response</code> 以外, odoo 还公开了 <code>werkzeug.wrappers.Response</code> 的所有属性和方法; 以下是一些常用的方法:</p><ul><li><strong><code>set_cookie(key, value=&#39;&#39;, max_age=None, expires=None, path=&#39;/&#39;, domain=None, secure=False, httponly=False, samesite=None, cookie_type=&#39;required&#39;)</code></strong>: 设置 cookie <ul><li><strong><code>key</code></strong>: cookie 的 key</li><li><strong><code>value</code></strong>: cookie 的 value</li><li><strong><code>max_age</code></strong>: 秒, 或者是 None; 如果 cookie 的持续时间与客户端的浏览器会话一样长, 则默认为 None;</li><li><strong><code>expires</code></strong>: datetime, 过期时间;</li><li><strong><code>path</code></strong>: 将 cookie 限制为给定路径, 默认情况下它将跨越整个域;</li><li><strong><code>domain</code></strong>: 将 cookie 限制为给定路径, 默认情况下它将跨越整个域;</li><li><strong><code>secure</code></strong>: 设置跨域 cookie; eg: <code>.example.com</code>, 将应用为 <code>www.example.com</code>, <code>foo.example.com</code> 等读取的 cookie;</li><li><strong><code>httponly</code></strong>: 禁止 javascript 访问 cookie;</li><li><strong><code>samesite</code></strong>: 将 cookie 的范围限制为仅附加到同一站点的请求;</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/website/lang/&lt;lang&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> multilang<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">change_lang</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> lang<span class="token punctuation">,</span> r<span class="token operator">=</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; :param lang: supposed to be value of \`url_code\` field &quot;&quot;&quot;</span>
        <span class="token keyword">if</span> lang <span class="token operator">==</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">:</span>
            lang <span class="token operator">=</span> request<span class="token punctuation">.</span>website<span class="token punctuation">.</span>default_lang_id<span class="token punctuation">.</span>url_code
            r <span class="token operator">=</span> <span class="token string">&#39;/%s%s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>lang<span class="token punctuation">,</span> r <span class="token keyword">or</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
        lang_code <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;res.lang&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_lang_get_code<span class="token punctuation">(</span>lang<span class="token punctuation">)</span>

        request<span class="token punctuation">.</span>update_context<span class="token punctuation">(</span>lang<span class="token operator">=</span>lang_code<span class="token punctuation">)</span>
        redirect <span class="token operator">=</span> request<span class="token punctuation">.</span>redirect<span class="token punctuation">(</span>r <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token string">&#39;/%s&#39;</span> <span class="token operator">%</span> lang<span class="token punctuation">)</span><span class="token punctuation">)</span>
        redirect<span class="token punctuation">.</span>set_cookie<span class="token punctuation">(</span><span class="token string">&#39;frontend_lang&#39;</span><span class="token punctuation">,</span> lang_code<span class="token punctuation">,</span> max_age<span class="token operator">=</span><span class="token number">365</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> redirect
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pandas-导出-excel-示例" tabindex="-1"><a class="header-anchor" href="#pandas-导出-excel-示例" aria-hidden="true">#</a> pandas 导出 Excel 示例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># pandas 导出销售订单</span>
<span class="token keyword">from</span> odoo <span class="token keyword">import</span> http<span class="token punctuation">,</span> _
<span class="token keyword">import</span> pandas
<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime


<span class="token keyword">class</span> <span class="token class-name">CtrlController</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Controller<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/export&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&#39;jwt&#39;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> csrf<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">exports_data</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            orders <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;sale.order&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sudo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sale_order&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token builtin">buffer</span> <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>
            columns <span class="token operator">=</span> <span class="token punctuation">[</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;Sales Person&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;Sales Team&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;Partner Name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;Country&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;City&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;State&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                _<span class="token punctuation">(</span><span class="token string">&#39;Create Date&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">]</span>
            data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token keyword">for</span> order <span class="token keyword">in</span> orders<span class="token punctuation">:</span>
                data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>
                    order<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                    order<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                    order<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>team_id<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                    order<span class="token punctuation">.</span>partner_id<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                    order<span class="token punctuation">.</span>country_id<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                    order<span class="token punctuation">.</span>city<span class="token punctuation">,</span>
                    order<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
                    order<span class="token punctuation">.</span>create_date<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">with</span> pandas<span class="token punctuation">.</span>ExcelWriter<span class="token punctuation">(</span><span class="token builtin">buffer</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
                pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> columns<span class="token operator">=</span>columns<span class="token punctuation">)</span><span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            stream <span class="token operator">=</span> <span class="token builtin">buffer</span><span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span>
            filename <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;销售订单-</span><span class="token interpolation"><span class="token punctuation">{</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">.xml&quot;</span></span>
            <span class="token keyword">return</span> request<span class="token punctuation">.</span>make_response<span class="token punctuation">(</span>stream<span class="token punctuation">,</span>headers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Disposition&#39;</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>content_disposition<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                          <span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="控制器扩展" tabindex="-1"><a class="header-anchor" href="#控制器扩展" aria-hidden="true">#</a> 控制器扩展</h2><p>在 ERP 系统中, 确保数据安全性和访问控制是一件至关重要的事情, odoo 的控制器中, 系统默认提供三种认证方式, <code>none</code>, <code>public</code>, <code>user</code>, 这些方式分别使用于不同场景, 但是在实际应用中, 我们有时候会需要其他的一些认证方式; 例如做前后端分离的接口的时候, 就需要 <code>jwt</code> 认证;</p><p>像这种自定义的认证方式, 就可以使用自定义认证方法来实现了;</p><h3 id="自定义认证" tabindex="-1"><a class="header-anchor" href="#自定义认证" aria-hidden="true">#</a> 自定义认证</h3><p><code>ir.http</code> 模型中, 允许我们通过 <code>_auth_method_{}</code> 来对控制器的 <code>auth</code> 进行扩展, 例如, 我们可以实现一个 <code>jwt</code> 认证:</p><blockquote><p>具体定义请查看源码 odoo/addons/base/models/ir_http.py</p></blockquote><ol><li>添加一个 <code>jwt_auth.py</code> 实现一个模型继承自 <code>ir.http</code>:</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> odoo <span class="token keyword">import</span> models
<span class="token keyword">import</span> jwt
<span class="token keyword">import</span> datetime
<span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> BadRequest
<span class="token keyword">from</span> odoo<span class="token punctuation">.</span>http <span class="token keyword">import</span> Response
<span class="token keyword">import</span> json

jwt_secret <span class="token operator">=</span> <span class="token string">&quot;1b4db7eb-4057-5ddf-91e0-36dec72071f5&quot;</span>


<span class="token keyword">def</span> <span class="token function">encode_jwt_token</span><span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    payload <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;user_id&#39;</span><span class="token punctuation">:</span> user_id<span class="token punctuation">,</span>
        <span class="token string">&#39;exp&#39;</span><span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>utcnow<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>hours<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>payload<span class="token punctuation">,</span> jwt_secret<span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">&#39;HS256&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> token


<span class="token keyword">def</span> <span class="token function">decode_jwt_token</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> jwt<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>token<span class="token punctuation">,</span> jwt_secret<span class="token punctuation">,</span> algorithms<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;HS256&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">response_callback</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> message<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">(</span>
        json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> code<span class="token punctuation">,</span>
            <span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> message<span class="token punctuation">,</span>
            <span class="token string">&#39;data&#39;</span><span class="token punctuation">:</span> data
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token number">200</span><span class="token punctuation">,</span>
        headers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">JwtAuth</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>AbstractModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    _inherit <span class="token operator">=</span> <span class="token string">&quot;ir.http&quot;</span>

    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">_auth_method_jwt</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>
        token <span class="token operator">=</span> request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jwt_token
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token comment"># 验证JWT令牌</span>
            payload <span class="token operator">=</span> decode_jwt_token<span class="token punctuation">(</span>token<span class="token punctuation">)</span>
            <span class="token comment"># 获取用户ID</span>
            user_id <span class="token operator">=</span> payload<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span>
            <span class="token comment"># 检查用户是否有权限</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> user_id <span class="token keyword">or</span> <span class="token keyword">not</span> cls<span class="token punctuation">.</span>check_jwt_user<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
                request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>logout<span class="token punctuation">(</span>keep_db<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
                msg <span class="token operator">=</span> <span class="token string">&quot;Unauthorized Exception!&quot;</span>
                <span class="token keyword">raise</span> BadRequest<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> response_callback<span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                lang <span class="token operator">=</span> request<span class="token punctuation">.</span>httprequest<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token string">&#39;en_US&#39;</span>
                request<span class="token punctuation">.</span>user <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;res.users&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sudo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>with_context<span class="token punctuation">(</span>lang<span class="token operator">=</span>lang<span class="token punctuation">)</span><span class="token punctuation">.</span>browse<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span>
                context <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>env<span class="token punctuation">.</span>context<span class="token punctuation">)</span>
                context<span class="token punctuation">[</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> lang
                request<span class="token punctuation">.</span>env<span class="token punctuation">.</span>context <span class="token operator">=</span> context
        <span class="token keyword">except</span> jwt<span class="token punctuation">.</span>ExpiredSignatureError<span class="token punctuation">:</span>
            request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>logout<span class="token punctuation">(</span>keep_db<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            msg <span class="token operator">=</span> <span class="token string">&quot;Jwt token expired!&quot;</span>
            <span class="token keyword">raise</span> BadRequest<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> response_callback<span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> jwt<span class="token punctuation">.</span>InvalidTokenError<span class="token punctuation">:</span>
            request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>logout<span class="token punctuation">(</span>keep_db<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            msg <span class="token operator">=</span> <span class="token string">&quot;Invalid Jwt token!&quot;</span>
            <span class="token keyword">raise</span> BadRequest<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> response_callback<span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">check_jwt_user</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> user_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> user_id<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
        user <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;res.users&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sudo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>browse<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span>
        <span class="token keyword">if</span> user<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在用户的登录接口里面做处理, 登录成功之后将 <code>jwt_token</code> 写入到 <code>session</code> 里面:</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Controller<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/user/login&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> csrf<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">user_login</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>
        request<span class="token punctuation">.</span>uid <span class="token operator">=</span> odoo<span class="token punctuation">.</span>SUPERUSER_ID
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            username <span class="token operator">=</span> kw<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span>
            password <span class="token operator">=</span> kw<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">)</span>

            user <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;res.users&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sudo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> user<span class="token punctuation">:</span>
                <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span>
                    code<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
                    data<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    message<span class="token punctuation">:</span> <span class="token string">&#39;Incorrect username or password&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            token <span class="token operator">=</span> encode_jwt_token<span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span>
            request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jwt_token <span class="token operator">=</span> token
            <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span>
                code<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
                data<span class="token punctuation">:</span> token
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>其他接口需要使用 <code>jwt</code> 鉴权的地方, 都可以添加 <code>auth=&quot;jwt&quot;</code> 来进行鉴权</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/user/info&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&quot;jwt&quot;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> csrf<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> website<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,42);function m(g,b){const t=o("ExternalLinkIcon");return e(),c("div",null,[i,n("ul",null,[n("li",null,[r,a(": 可以是单个字符串或者是字符串数组; 具体可以查看 "),n("a",k,[a("werkzeug routing"),u(t)])]),d]),v])}const y=p(l,[["render",m],["__file","控制器.html.vue"]]);export{y as default};
